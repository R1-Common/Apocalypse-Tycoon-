local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "apocalypse Tycoon",
   LoadingTitle = "PJEX",
   LoadingSubtitle = "Made BY pjEX",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "APOCALTYCOONPJEX"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Exeution",
   Content = "Thanks for executing",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "PJEX is so cool",
         Callback = function()
         print("PJEX IS SO COOL")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Money [Click To Get]",
   Callback = function()
   -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = 250000
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.GiveReward:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieGiant2 [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieGiant2",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieGiant [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieGiant",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieMilitary [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieMilitary",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieSecurity [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieSecurity",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieChef [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieChef",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn ZombieRunner [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "ZombieRunner",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn Zombie2 [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "Zombie2",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local Button = MainTab:CreateButton({
   Name = "Spawn Zombie [RAID] [Cost: 0]",
   Callback = function()
   local args = {
    [1] = "Zombie",
    [2] = 0
}

game:GetService("ReplicatedStorage").Knit.Services.RaidService.RF.SpawnMob:InvokeServer(unpack(args))
   end,
})

local PlayerTab = Window:CreateTab("Player", nil) -- Title, Image
local Section = PlayerTab:CreateSection("Player")

 local Toggle = PlayerTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(InfiniteJumpEnabled)
        local InfiniteJumpEnabled = true
        game:GetService("UserInputService").JumpRequest:connect(function()
            if InfiniteJumpEnabled then
                game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
            end
        end)
    end,
 })

local Slider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 250},
   Increment = 1,
   Suffix = "WalkSpeed",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(v)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
   end,
})

local Slider = PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 500},
    Increment = 1,
    Suffix = "JumpPower",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end,
 })
 
 local ESPTab = Window:CreateTab("ESP", nil) -- Title, Image
 local ESPSection = ESPTab:CreateSection("ESP")
 
local Toggle = ESPTab:CreateToggle({
   Name = "ESP",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
   local gui = Instance.new("BillboardGui");
gui.Name = "";
gui.AlwaysOnTop = true;
gui.LightInfluence = 0;
gui.Size = UDim2.new(1.75, 0, 1.75, 0);
local frame = Instance.new("Frame", gui);
frame.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
frame.Size = UDim2.new(1, 0, 1, 0);
frame.BorderSizePixel = 4;
frame.BorderColor3 = Color3.fromRGB(0, 0, 0);
local gi = gui:Clone();
local body = frame:Clone();
body.Parent = gi;
body.BackgroundColor3 = Color3.fromRGB(0, 170, 170);
 
for _, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name ~= game:GetService("Players").LocalPlayer.Name and v.Character and v.Character:FindFirstChild("Head") then
        gui:Clone().Parent = v.Character.Head;
    end
end
   end,
})
